{
  "name": "RAG Flowise v3 + n8n",
  "nodes": [
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.content }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "tipo",
                "value": "={{ $(\'If Documento es Valido\').item.json.message.content }}"
              },
              {
                "name": "=resumen_documento",
                "value": "={{ $(\'Extraer Metadata General\').item.json.output.resumen_documento }}"
              },
              {
                "name": "descripcion_documento",
                "value": "={{ $(\'Extraer Metadata General\').item.json.output.descripcion_documento }}"
              },
              {
                "name": "analisis_documento",
                "value": "={{ $(\'Extraer Metadata General\').item.json.output.analisis_documento }}"
              },
              {
                "name": "conclusion_documento",
                "value": "={{ $(\'Extraer Metadata General\').item.json.output.conclusion_documento }}"
              },
              {
                "name": "keywords_documento",
                "value": "={{ $(\'Extraer Metadata General\').item.json.output.keywords_documento }}"
              },
              {
                "name": "capitulo",
                "value": "={{ $json.chapter ?? \'\' }}"
              },
              {
                "name": "seccion",
                "value": "={{ $json.section ?? \'\' }}"
              },
              {
                "name": "articulo",
                "value": "={{ $json.article ?? \'\' }}"
              }
            ]
          }
        }
      },
      "id": "d3368019-2718-4f86-893b-32fa0540cc1b",
      "name": "Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        1860,
        -100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// 1) Obtiene todo el texto\nconst fullText = $(\'Extraer PDF\').first().json.text || \'\';\n\n// 2) Encuentra todos los encabezados de capítulo, sección y artículo\nconst headingRegex = /^((?:CAP[IÍ]TULO|SECCI[ÓO]N|ART[IÍ]CULO)\\s+[\\wÀ-ÿ\\.\\-]+)/gim;\nconst matches = [];\nlet m;\nwhile ((m = headingRegex.exec(fullText)) !== null) {\n  matches.push({\n    index: m.index,\n    header: m[1].trim()\n  });\n}\nmatches.push({ index: fullText.length, header: null });\n\n// 3) Funciones auxiliares\n// a) Extrae dígitos\nconst onlyDigits = str => (str.match(/\\d+/) || [\'\'])[0];\n\n// b) Convierte romano a entero (soporta I, V, X, L, C, D, M)\nconst romanToInt = s => {\n  if (!s) return \'\';\n  const R = {I:1, V:5, X:10, L:50, C:100, D:500, M:1000};\n  let num = 0, prev = 0;\n  s.toUpperCase().split(\'\').reverse().forEach(ch => {\n    const val = R[ch] || 0;\n    if (val < prev) num -= val;\n    else { num += val; prev = val; }\n  });\n  return num.toString();\n};\n\n// 4) Recorre los matches para extraer\nconst results = [];\nlet currentChapter = \'\';\nlet currentSection = \'\';\n\nfor (let i = 0; i < matches.length - 1; i++) {\n  const { index, header } = matches[i];\n  const nextIndex = matches[i + 1].index;\n  if (!header) continue;\n\n  const piece = header.match(/^(CAP[IÍ]TULO|SECCI[ÓO]N|ART[IÍ]CULO)\\s+(.+)$/i);\n  if (!piece) continue;\n  const [, typeRaw, numRaw] = piece;\n  const type = typeRaw.toUpperCase();\n\n  // Intentamos extraer arabigos; si no hay, caemos a romano\n  const extractNum = str => {\n    const d = onlyDigits(str);\n    if (d) return d;\n    // extraer secuencia romana (letras I,V,X,L,C,D,M)\n    const romans = (str.match(/[IVXLCDM]+/i) || [\'\'])[0];\n    return romanToInt(romans);\n  };\n\n  if (type === \'CAPÍTULO\' || type === \'CAPITULO\') {\n    currentChapter = extractNum(numRaw);\n    continue;\n  }\n  if (type === \'SECCIÓN\' || type === \'SECCION\') {\n    currentSection = extractNum(numRaw);\n    continue;\n  }\n  if (type === \'ARTÍC... [truncated]\n      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1500,
        -380
      ],
      "id": "e88d962e-15a7-47e4-8779-6b885c87289c",
      "name": "Dividir Texto en Articulos"
    },
    {
      "parameters": {
        "formTitle": "RAG Definitivo",
        "formDescription": "=Selecciona el documento que quires cargar.\n",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Documento",
              "fieldType": "file",
              "multipleFiles": false,
              "acceptFileTypes": ".pdf",
              "requiredField": true
            }
          ]
        },
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -760,
        -360
      ],
      "id": "c115eb61-aa82-4310-a00c-3a6324771110",
      "name": "On form submission",
      "webhookId": "7bbb414a-d50d-4f00-8984-4bb074c211fd"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1120,
        -140
      ],
      "id": "4669b951-34e1-4e13-998b-6fce05df7b0e",
      "name": "Google Gemini 2.0 Flash1",
      "credentials": {
        "googlePalmApi": {
          "id": "NdyPXiyPUwmqADX5",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "Documento",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -360,
        -360
      ],
      "id": "628ec46c-85d2-4b1b-82c0-9e97cb64aebd",
      "name": "Extraer PDF"
    },
    {
      "parameters": {
        "text": "={{ $(\'Extraer PDF\').item.json.text }}",
        "attributes": {
          "attributes": [
            {
              "name": "resumen_documento",
              "description": "Resume brevemente el tipo de documento en pocas líneas"
            },
            {
              "name": "descripcion_documento",
              "description": "Describe brevemente el documento en pocas líneas."
            },
            {
              "name": "analisis_documento",
              "description": "Extrae una lista de observaciones analíticas clave de la sección Perspectivas analíticas, incluidos los cambios de tono o comportamiento."
            },
            {
              "name": "conclusion_documento",
              "description": "Resume las conclusiones extraídas sobre los hilos del usuario y su enfoque general."
            },
              {
                "name": "keywords_documento",
                "description": "Genere una lista de 10 palabras clave que capten la esencia del documento (por ejemplo, \"codigoPenal\", \"codigoCivil\")."
              }
            ]
          }
        },
        "options": {
          "systemPromptTemplate": "=Eres un experto en algoritmos de extracción.\nExtrae del texto sólo la información relevante.\nSi no conoces el valor de un atributo que se te pide extraer, puedes omitir el valor del atributo.\n\nDevuelve la información en formato texto normal, no utilices markdown ni nada extraño."
        }
      },
      "id": "e25f36c3-5afd-425d-a5f5-2710f940fb31",
      "name": "Extraer Metadata General",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "position": [
        1120,
        -380
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://qdrant:6333/collections/documentos/points/delete",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"filter\": {\n    \"must\": [\n      {\n        \"key\": \"metadata.tipo\",\n        \"match\": { \"value\": \"{{ $json.message.content }}\" }\n      }\n    ]\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        800,
        -380
      ],
      "id": "1734be03-dfa2-4b5a-ac8c-49f6e6bc35bd",
      "name": "Borrar Documento Existente",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "GPT-4.1-NANO"
        },
        "messages": {
          "values": [
            {
              "content": "=Te voy a pasar el nombre de un documento y tu objetivo es dar una de las siguientes salidas con el formato que te describo.\n\nEl nombre del documento es el siguiente: {{ $json.info.Title }}\n\nDebes clasificar con una de las siguientes opciones que te describo a continuación:\n\nley_enjuiciamiento_criminal: si el nombre del documento hace referencia a la ley de enjuiciamiento criminal.\ncodigo_penal: si el nombre del documento hace referencia al codigo penal.\nley_arrendamientos_urbanos: si el nombre del documento hace referencia a la ley de arrendamientos urbanos.\ncodigo_civil: si el nombre del documento hace referencia al codigo civil.\nley_enjuiciamento_civil: si el nombre del documento hace referencia a la ley de enjuiciamento civil.\nley_concursal: si el nombre del documento hace referencia a la ley concursal o al texto refundido de la ley concursal.\nley_ordenacion_edificacion: si el nombre del documento hace referencia a la ley de ordenacion de edificacion.\nley_juridiccion_voluntaria: si el nombre del documento hace referencia a la ley de juridiccion voluntaria.\nmateria_eficiencia_servicio_publico_justicia: si el nombre del documento hace referencia a materia de eficiencia del servicio público de justicia.\n\nTu salida siempre debe ser una de las opciones anteriores. Si no coincide, responde una salida vacía.\n\n\n"
            }
          ]
        },
        "options": {
          "frequency_penalty": 0,
          "presence_penalty": 0,
          "temperature": 0.1,
          "topP": 0.9
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -100,
        -360
      ],
      "id": "37d1bc03-d530-4e5f-9566-1b56fc11cb2a",
      "name": "Nombrar Documento IA",
      "credentials": {
        "openAiApi": {
          "id": "qLM5Iy3mjllZuUML",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            ""version": 2
          },
          "conditions": [
            {
              "id": "a0ba821d-654b-4e48-b834-22e1607d2611",
              "leftValue": "={{ $json.message.content }}",
              "rightValue": "ley_enjuiciamiento_criminal",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "8a084dea-323a-415f-8fd3-705d6d94cad5",
              "leftValue": "={{ $json.message.content }}",
              "rightValue": "codigo_penal",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "58f2bb7e-480c-4bd8-81e0-79764cdcbeb5",
              "leftValue": "={{ $json.message.content }}",
              "rightValue": "ley_arrendamientos_urbanos",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "d0dd8f91-e79f-4bb1-9b42-37a4b9056f14",
              "leftValue": "={{ $json.message.content }}",
              "rightValue": "codigo_civil",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "edf02c9d-694f-4d3f-8318-cd088714d41b",
              "leftValue": "={{ $json.message.content }}",
              "rightValue": "ley_enjuiciamento_civil",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "bfebd1f4-2c33-478b-a3dd-d8fb38590f89",
              "leftValue": "={{ $json.message.content }}",
              "rightValue": "ley_concursal",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "39ee704d-f107-47fa-91fc-e417f5940a23",
              "leftValue": "={{ $json.message.content }}",
              "rightValue": "ley_ordenacion_edificacion",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "50c6da33-9e03-469b-8827-a09d96012c87",
              "leftValue": "={{ $json.message.content }}",
              "rightValue": "ley_juridiccion_voluntaria",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "8929ffb9-0deb-4bfc-b7b8-697c38e1e7b4",
              "leftValue": "={{ $json.message.content }}",
              "rightValue": "materia_eficiencia_servicio_publico_justicia",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        380,
        -360
      ],
      "id": "4c4faff2-0190-4c2a-8889-4c0e553e6757",
      "name": "If Documento es Valido"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2200,
        -380
      ],
      "id": "fddf3f38-b915-4f56-bcb2-fd26b3a58d38",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "operation": "completion",
        "completionTitle": "¡Documento cargado!",
        "completionMessage": "El documento ha sido cargado correctamente",
        "options": {
          "formTitle": "RAG Definitivo"
        }
      },
      "type": "n8n-nodes-base.form",
      "typeVersion": 1,
      "position": [
        2420,
        -380
      ],
      "id": "a73f888d-184a-4efe-b01d-70e6a9b846ec",
      "name": "Form",
      "webhookId": "0471e1cf-608b-4466-b436-a3080941e2ca"
    },
    {
      "parameters": {
        "operation": "completion",
        "completionTitle": "Documento no válido",
        "completionMessage": "El documento introducido no es un documento válido.",
        "options": {
          "formTitle": "RAG Definitivo"
        }
      },
      "type": "n8n-nodes-base.form",
      "typeVersion": 1,
      "position": [
        700,
        -160
      ],
      "id": "717f1732-f382-446d-be14-1453467afc89",
      "name": "Form1",
      "webhookId": "0471e1cf-608b-4466-b436-a3080941e2ca"
    },
    {
      "parameters": {
        "chunkSize": 1024,
        "chunkOverlap": 256,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2000,
        120
      ],
      "id": "b4c2fb41-6a6c-415a-bffa-96288fe2cbd2",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "=documentos",
          "mode": "id"
        },
        "options": {}
      },
      "id": "db8157af-891a-4837-a5c7-6af0dfb7df71",
      "name": "Qdrant Vector Store1",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "position": [
        1840,
        -380
      ],
      "executeOnce": false,
      "retryOnFail": true,
      "typeVersion": 1,
      "credentials": {
        "qdrantApi": {
          "id": "rg2NHi83Wt2pkwYi",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {
          "dimensions": 1536
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        1660,
        -40
      ],
      "id": "6e1babdd-9e6c-44fa-8b24-569a64d9b262",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "qLM5Iy3mjllZuUML",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        500,
        320
      ],
      "id": "aa94dc9a-6870-4d01-aa76-b01162272333",
      "name": "Telegram Trigger",
      "webhookId": "962ffe2f-735a-4b6d-9a87-8b6fda93d5c1",
      "credentials": {
        "telegramApi": {
          "id": "8drPogr674XwAfP9",
          "name": "Flowise Bot"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $(\'Telegram Trigger\').item.json.message.chat.id }}",
        "text": "={{ $json.text }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        980,
        320
      ],
      "id": "afec847f-7b15-44b6-84df-4ec772e634de",
      "name": "Send a text message",
      "webhookId": "e5848098-3d1f-4cb8-9548-2895a7a9bd20",
      "credentials": {
        "telegramApi": {
          "id": "8drPogr674XwAfP9",
          "name": "Flowise Bot"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://tu_url/api/v1/prediction/e33c93d5-b63c-4ae4-8e34-fe1aa2dbc4f4",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"question\": \"{{ $json.message.text }}\",\n  \"overrideConfig\": {\n    \"sessionId\": \"{{ $json.message.chat.id }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        760,
        320
      ],
      "id": "c37463a6-7eff-42fe-a49f-b1cbce249751",
      "name": "Agente RAG Flowise"
    },
    {
      "parameters": {
        "content": "# AGENTE RAG en FLOWISE",
        "height": 500,
        "width": 920,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        320,
        120
      ],
      "id": "99e6c0b6-2d6d-437e-8dd5-725faba3e90c",
      "name": "Sticky Note"
    }
  ],
  "pinData": {},
  "connections": {
    "Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Dividir Texto en Articulos": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "Extraer PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini 2.0 Flash1": {
      "ai_languageModel": [
        [
          {
            "node": "Extraer Metadata General",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Extraer PDF": {
      "main": [
        [
          {
            "node": "Nombrar Documento IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extraer Metadata General": {
      "main": [
        [
          {
            "node": "Dividir Texto en Articulos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Borrar Documento Existente": {
      "main": [
        [
          {
            "node": "Extraer Metadata General",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Nombrar Documento IA": {
      "main": [
        [
          {
            "node": "If Documento es Valido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Documento es Valido": {
      "main": [
        [
          {
            "node": "Borrar Documento Existente",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Form1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Form",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store1": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Agente RAG Flowise",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agente RAG Flowise": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3f6ae3ae-2212-4e14-9465-09e7f8aeb455",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9bf9145e22226d3dde31d69a2254018e4fb1eec7eb0d3a8fb5176a27c2816db5"
  },
  "id": "B8D7w2XkkCHAn1eL",
  "tags": []
}
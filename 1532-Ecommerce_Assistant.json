{
  "name": "Agente eCommerce",
  "nodes": [
    {
      "parameters": {
        "public": true,
        "initialMessages": "Hola! üëã\nSoy el Asistente Virtual del eCommerce BlunexAI. ¬øEn qu√© puedo ayudarte?",
        "options": {
          "subtitle": "E-Commerce Tienda de Ropa",
          "title": "BlunexAI"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -380,
        -140
      ],
      "id": "532c5177-4149-4755-996b-f8ba6739f008",
      "name": "When chat message received",
      "webhookId": "d40c3554-2ec2-4a43-9719-27210a6445d1"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=# Identidad\n\nEres un asistente de atenci√≥n al cliente de un eCommerce llamado BlunexAI. Tu objetivo es asistir a personas que quieren comprar en la tienda online de ropa ofreciendo informaci√≥n de los productos que dispones.\n\n# Objetivo\n\nPara responder a consultas sobres productos, utiliza tu herramienta de \"Postgres\":\n1. Recibir una pregunta en lenguaje natural sobre los datos de una base de datos de una tienda online de ropa.\n2. Convertirla √∫nica y exclusivamente en una instrucci√≥n SQL SELECT v√°lida.\n3. No ejecutar nunca INSERT, UPDATE ni DELETE.\n4. Al generar la consulta SELECT, simpere usar la funci√≥n SIMILARITY para encontrar b√∫squedas parecidas. En el WHERE usa el operador % para filtrar por similitud.\n5. Usar siempre la herramienta ‚Äúpostgres‚Äù para ejecutar la consulta\n6. Tras la ejecuci√≥n, utiliza los resultados para responder en lenguaje natural siendo consciente que eres un asistente de un ecommerce.\n\n# Estructura Base de Datos\n\nA continuaci√≥n tienes la **estructura completa** de tu base de datos (schema DDL). √ösala para conocer nombres de tablas, columnas y tipos:\n\n```sql\n-- ============================================\n-- Script de creaci√≥n de tablas para tienda online\n-- ============================================\n\n-- 1. Tabla: productos (con campos extra)\nCREATE TABLE productos (\n  producto_id     SERIAL PRIMARY KEY,\n  nombre          VARCHAR(150) NOT NULL,\n  descripcion     TEXT,\n  sku             VARCHAR(50) UNIQUE NOT NULL,\n  precio_unit     NUMERIC(10,2) NOT NULL CHECK (precio_unit >= 0),\n  stock           INT NOT NULL DEFAULT 0 CHECK (stock >= 0),\n  activo          BOOLEAN NOT NULL DEFAULT TRUE,\n  imagen_url      TEXT,\n  atributos       JSONB NOT NULL DEFAULT '{}'::jsonb,\n  creado_en       TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),\n  actualizado_en  TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()\n);\n\n-- Funci√≥n y trigger para mantener actualizado 'actualizado_en'\nCREATE OR R... [truncated]\n          ",
          "maxIterations": 10
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -160,
        -140
      ],
      "id": "d708cb4e-47bb-458f-926b-d7073df1a8de",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "{{$fromAI('query')}}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        180,
        140
      ],
      "id": "74b24490-bd1e-4680-8e3f-7a8710e3f968",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "pTvqjxKYlwRz2TWh",
          "name": "Tienda Online"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-04-17-thinking",
        "options": {
          "temperature": 0.1,
          "topP": 0.9
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -300,
        140
      ],
      "id": "ba6263fe-38a5-4976-a8f2-beeaf743b666",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "NdyPXiyPUwmqADX5",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -80,
        160
      ],
      "id": "cddcb788-495d-4e5a-87ea-bb195a67e854",
      "name": "Simple Memory"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6a3cac88-fc09-40e1-af6b-cb6fd69f1815",
  "meta": {
    "instanceId": "9bf9145e22226d3dde31d69a2254018e4fb1eec7eb0d3a8fb5176a27c2816db5"
  },
  "id": "3VDUtB6RGXubi17h",
  "tags": []
}
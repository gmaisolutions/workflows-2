{
  "name": "Agente_Ecommerce_v2",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "8dfb1160-e374-484c-9059-92508f07b3c6",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2260,
        0
      ],
      "id": "00dcd5f2-ea08-4992-9eb6-82907c9e5508",
      "name": "Webhook",
      "webhookId": "8dfb1160-e374-484c-9059-92508f07b3c6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "24c275ee-aef2-4b03-bf22-4ca69aa05e98",
              "name": "serverUrl",
              "value": "={{ $json.body.server_url }}",
              "type": "string"
            },
            {
              "id": "a15eb467-42de-4299-a389-667647ccc613",
              "name": "instanceName",
              "value": "={{ $json.body.instance }}",
              "type": "string"
            },
            {
              "id": "13f6d482-fb2d-42a2-958e-e82273d679c",
              "name": "apiKey",
              "value": "={{ $json.body.apikey }}",
              "type": "string"
            },
            {
              "id": "557486dd-9057-4d07-8c8a-19583a79b9f9",
              "name": "message.messageId",
              "value": "={{ $json.body.data.key.id }}",
              "type": "string"
            },
            {
              "id": "79493ec9-a117-496c-88bf-65254c376d20",
              "name": "message.chatId",
              "value": "={{ $json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "1208a065-1670-40c7-9b9d-5c8c87cedd3f",
              "name": "message.messageType",
              "value": "={{ $json.body.data.message.conversation ? 'text': '' }}{{ $json.body.data.message.extendedTextMessage ? 'text': '' }}{{ $json.body.data.message.audioMessage ? 'audio': '' }}{{ $json.body.data.message.imageMessage ? 'image': '' }}",
              "type": "string"
            },
            {
              "id": "2e0a8ca5-35b9-4d4d-9005-1e66ac828eeb",
              "name": "message.messageContent",
              "value": "={{ $json.body.data.message.extendedTextMessage?.text || '' }}{{ $json.body.data.message.imageMessage?.caption || '' }}{{ $json.body.data.message.conversation || '' }}",
              "type": "string"
            },
            {
              "id": "2f72443f-eace-44fa-8a81-5f3bf1ab5e88",
              "name": "message.messageTimeStamp",
              "value": "={{ $json.body.date_time.toDateTime().toISO() }}",
              "type": "string"
            },
            {
              "id": "a8c0f64c-2ad7-42c8-9af0-eb792f298cdd",
              "name": "userName",
              "value": "={{ $json.body.data.pushName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2020,
        0
      ],
      "id": "a55c12b7-335e-4272-8514-ced0811d12da",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "e397999f-f0d4-47db-8619-c188b5e3616b"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "338e3688-336d-4e2a-a3a9-d81e6bbd4e11",
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b8f82334-7775-4e5d-9d7c-f6402af55910",
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "other"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        40,
        -60
      ],
      "id": "ea986015-ca38-46f4-8c10-8eb970013220",
      "name": "Switch"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Edit Fields').item.json.serverUrl }}/chat/getBase64FromMediaMessage/{{ $('Edit Fields').item.json.instanceName }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Edit Fields').item.json.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $json.messageId }}"
            },
            {
              "name": "convertToMp4",
              "value": "={{ Boolean(false) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        400,
        -300
      ],
      "id": "9cb2eb62-1fd8-40e7-befb-dbbb3ea65e9e",
      "name": "descargar audio"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        620,
        -300
      ],
      "id": "f64b2f4c-2587-4538-8dfc-a6d5ed49cf18",
      "name": "convertir audio"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        840,
        -300
      ],
      "id": "41adf71f-0318-4d13-9374-c879707f109c",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "qLM5Iy3mjllZuUML",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Edit Fields').item.json.serverUrl }}/chat/getBase64FromMediaMessage/{{ $('Edit Fields').item.json.instanceName }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Edit Fields').item.json.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $json.messageId }}"
            },
            {
              "name": "convertToMp4",
              "value": "={{ Boolean(false) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        -80
      ],
      "id": "cbec9e4f-1234-41bf-bd6b-27f621939ff9",
      "name": "descargar imagen"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        660,
        -80
      ],
      "id": "dc8f0c71-17cd-48c8-a691-0b9c3280cd55",
      "name": "convertir imagen"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a54b459d-e8df-47e1-be8c-a8a476ab93c3",
              "name": "content",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "1b078c6c-6824-43e2-8bff-8a56fca7a1c9",
              "name": "timestamp",
              "value": "={{ $('Json Parse').item.json.messageTimeStamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1060,
        -300
      ],
      "id": "c41fa4f2-9344-435a-a7c0-4dbe4c56669f",
      "name": "audio content"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Describe la imagen",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        880,
        -80
      ],
      "id": "7a73f670-1627-454f-b962-7ad33e14277a",
      "name": "describe imagen",
      "credentials": {
        "openAiApi": {
          "id": "qLM5Iy3mjllZuUML",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a54b459d-e8df-47e1-be8c-a8a476ab93c3",
              "name": "content",
              "value": "=<image>\n{{ $json.content }}\n</image>",
              "type": "string"
            },
            {
              "id": "29e2c943-8bb0-4199-84dd-16d098894ddd",
              "name": "timestamp",
              "value": "={{ $('Json Parse').item.json.messageTimeStamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1060,
        -80
      ],
      "id": "7eb4ed2c-f60a-4d8f-a0eb-5ae32a5d83cd",
      "name": "image content"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bcea6c99-72fa-44d3-acc6-ecfdec887583",
              "name": "content",
              "value": "={{ $json.messageContent }}",
              "type": "string"
            },
            {
              "id": "6abb6aff-1f4a-4ab5-aece-c2bf1d27a59d",
              "name": "timestamp",
              "value": "={{ $('Json Parse').item.json.messageTimeStamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1060,
        140
      ],
      "id": "b290cd6b-f073-49ad-b0ef-f13c144786db",
      "name": "text content"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=El usuario te envía el siguiente mensaje\n\nHoy: {{ $now.format('dd MMMM. yyyy', 'es') }}\nuser name: {{ $('Edit Fields').item.json.userName }}\n\nMensaje del Usuario:\n{{ $('mensaje').item.json.content }}",
        "options": {
          "systemMessage": "=# Rol\n\nEres un agente de una tienda online de ropa.\n\nTu tarea es de vital importancia para la atención al cliente en la empresa, por lo cual si la cumples de forma eficiente te vamos a recompensar con una propina de 2000 euros.\n\n# Tarea\n\nAsistir a las personas bridándoles información precisa sobre los productos de la tienda online. Tienes que ayudar a los clientes a encontrar los productos adecuados, responder preguntas sobre características técnicas, comparar opciones y recomendar productos según sus necesidades.\n\nSiempre que te pregunten por algún tipo de producto tienes que buscar información en la herramienta \"Conocimiento\". Nunca respondas con ningún producto ni herramienta que no hayas obtenido directamente de la base de datos \"Conocimiento\". Si no encuentras el producto, responderás que te dé más detalles acerca del producto que necesita para ayudarle a encontrarlo.\n\nUtiliza un tono alegre para comunicarte, y cuando el usuario inicie la conversación, dale la bienvenida.\n\n# Herramientas\n\n\"Conocimiento\" utiliza esta herramienta SIEMPRE para responder a consultas relacionadas sobre información de productos de la tienda. Solo puedes ofrecer productos que tengas en esta herramienta.\n\n# Reglas:\n\nResponde siempre con información precisa acerca de los productos que te consulten. También puedes ofrecer productos similares a lo que pregunta el usuario siempre y cuando estén en la base de datos \"Conocimiento\".\n\n\n\n## Ejemplo 1:\n\nEntrada: Hola, busco un pantalón con talla M.\n\nAcción: Utiliza la herramienta \"Conocimiento\" para obtener productos relacionados con pantalones de esta talla.\n\nSalida: Incluye SIEMPRE la url del producto en la salida:\n\nClaro! Aquí te ofrezco varios pantalones que tenemos en la tienda!\n\n1. Pantalón Gris Talla M\n\nReferencia: 95543\nPrecio: €43.69\nDescripción: Pantalón Color Azul Gris Talla M\nhttps://tienda.blunexai.com/producto/logo-collection/\n\n\n2. Pantalón Azul Talla XL\n\nReferencia: 95543\nPrecio: €43.69\nDescripción: Pantalón Color Azul Gris Talla M\nhttps://tienda.blunexai.com/producto/logo-collection/\n\n\nSi buscas más... [truncated]"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        2580,
        -140
      ],
      "id": "275d509b-463a-49cb-afd1-a384857eaf78",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d2599831-cc84-4aa6-acf7-77ed624f72ab",
              "name": "content",
              "value": "={{ $json.messages.join("\n") }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2200,
        -140
      ],
      "id": "71869209-793a-4fd9-b751-101c6998d495",
      "name": "mensaje"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Edit Fields').item.json.message.chatId }}",
        "messageData": "={{ JSON.stringify($('Edit Fields').item.json.message) }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1800,
        0
      ],
      "id": "ad1ffc32-c576-4ebb-a453-53314bbc460d",
      "name": "push mensaje",
      "credentials": {
        "redis": {
          "id": "YA7nQxrWzSTrr6nV",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "message",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -520,
        -40
      ],
      "id": "5080a38d-df56-4db7-8ddf-6750f6f25116",
      "name": "Split Out"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ JSON.parse($json.message) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -300,
        -40
      ],
      "id": "428dfd1c-cae0-4a4d-ae54-aaeef1ca0def",
      "name": "Json Parse"
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1600,
        -140
      ],
      "id": "c5f80292-4143-4596-8105-de71deb7e172",
      "name": "Merge"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "timestamp"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        1780,
        -140
      ],
      "id": "03c11877-c9bc-4076-b8f4-a8356f3b06b6",
      "name": "Sort"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "content",
              "renameField": true,
              "outputFieldName": "messages"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1960,
        -140
      ],
      "id": "94b06333-3a18-4bc0-b3da-87ad3353c8bc",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1600,
        0
      ],
      "id": "fee07840-7bef-42cb-b78b-a5981022aee7",
      "name": "Wait1",
      "webhookId": "91da1201-7b88-42f6-8a02-35edba47cd0c"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "18445dcf-1967-40d1-aec2-6d2196b1364b",
              "leftValue": "={{ JSON.parse($json.message.last()).messageId }}",
              "rightValue": "={{ $('Edit Fields').item.json.message.messageId }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1100,
        0
      ],
      "id": "d9bb46de-b386-48b7-83da-b6514df3007e",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -820,
        240
      ],
      "id": "f0d3be1f-bf67-4a21-b1f6-e2749b3f36d4",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $('Edit Fields').item.json.message.chatId }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1360,
        0
      ],
      "id": "27a347ee-fe6e-4d47-826d-fc77059acbf8",
      "name": "obtener todos mensajes",
      "credentials": {
        "redis": {
          "id": "YA7nQxrWzSTrr6nV",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Edit Fields').item.json.message.chatId }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -780,
        -40
      ],
      "id": "1e51f4bf-4ff2-4937-92b4-c082e48b1b9e",
      "name": "borrar todos mensajes",
      "credentials": {
        "redis": {
          "id": "YA7nQxrWzSTrr6nV",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        3180,
        80
      ],
      "id": "ca51c1b0-a54c-45f2-b38a-e388dafdab9e",
      "name": "Auto-fixing Output Parser"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"response\": {\n      \"part_1\": \"Parte uno de la respuesta\",\n      \"part_2\": \"Parte dos de la respuesta (opcional).\",\n      \"part_3\": \"Parte tres de la respuesta (opcional).\"\n    }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        3380,
        300
      ],
      "id": "c17c7198-1b5d-4663-ae44-94a6c7faed3c",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Texto de entrada:\n{{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=# Formatea el texto de entrada de acuerdo a las instrucciones.\n\n---------------\n\n## Instrucciones\n- Devuelve un mensaje de salida dividido en 1, 2, o 3 partes, dependiendo de la lingitud del texto de entrada.\n- El mensaje de salida debe sonar relajado y amigable.\n- Elimina estos caracteres:\n \"*\", \"¿\", \"¡\", \"#\"\n- Utiliza signos de interrogación \"?\" **solo en el final de las frases que sean preguntas.**\n- **No** es necesario que las 3 partes contengan un mensaje.\n- Si el texto de entrada contine una lista, déjala sola en una parte.\n- En la respuesta no se puede devolver mensajes como \"Utilizando la herramienta Conocimiento para buscar...\" o cosas similares.\n- **IMPORTANTE: No añadas ni elimines información esencial del texto de entrada. Respeta fielmente el contenido original. Solamente ajusta la forma (ej. eliminar caracteres, dividir en partes, ajustar estilo) para cumplir las instrucciones dadas.**\n\n## **IMPORTANTE**\n- Si haces bien tu trabajo te voy a pagar un sueldo de $5,000 USD al mes.\n- **SIEMPRE debes completar al menos una parte con texto**."
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        3100,
        -140
      ],
      "id": "fba50f15-3215-43cf-9e63-728c439662c9",
      "name": "Verificador de Respuesta"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3080,
        280
      ],
      "id": "cf76ec47-35dc-4e33-be29-515d14b30d4c",
      "name": "4o mini Verificador",
      "credentials": {
        "openAiApi": {
          "id": "qLM5Iy3mjllZuUML",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Edit Fields').item.json.serverUrl }}/message/sendText/{{ $('Edit Fields').item.json.instanceName }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Edit Fields').item.json.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Edit Fields').item.json.message.chatId }}"
            },
            {
              "name": "text",
              "value": "={{ $('Verificador de Respuesta').item.json.output.response.part_1 }}"
            },
            {
              "name": "delay",
              "value": "={{ 2000 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3480,
        -140
      ],
      "id": "ede1f25e-2021-4877-8641-3485f2f29493",
      "name": "Enviar Parte1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4b92a1f4-d4bc-4689-87cf-1be40aa49c27",
              "leftValue": "={{ $('Verificador de Respuesta').item.json.output.response.part_2 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3700,
        -140
      ],
      "id": "cc024fb5-17f8-4feb-ad52-cf389a75fca7",
      "name": "If Parte 2"
    },
    {
      "parameters": {
        "amount": "={{ 2+$('Verificador de Respuesta').item.json.output.response.part_2.length*0.01 }}"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3940,
        -240
      ],
      "id": "bf2af916-69b3-4141-b5ef-88d34a437fb6",
      "name": "Wait",
      "webhookId": "582bfc7e-0a45-44dc-aa94-f125eaa6a085"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Edit Fields').item.json.serverUrl }}/message/sendText/{{ $('Edit Fields').item.json.instanceName }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Edit Fields').item.json.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Edit Fields').item.json.message.chatId }}"
            },
            {
              "name": "text",
              "value": "={{ $('Verificador de Respuesta').item.json.output.response.part_2 }}"
            },
            {
              "name": "delay",
              "value": "={{ 2000 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4140,
        -240
      ],
      "id": "13733e3f-7c48-4896-a607-4d7728d6a22e",
      "name": "Enviar Parte2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4b92a1f4-d4bc-4689-87cf-1be40aa49c27",
              "leftValue": "={{ $('Verificador de Respuesta').item.json.output.response.part_3 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4420,
        -120
      ],
      "id": "45099d51-80c4-4ab9-845f-86d49b5c05b9",
      "name": "If Parte 3"
    },
    {
      "parameters": {
        "amount": "={{ 2+$('Verificador de Respuesta').item.json.output.response.part_3.length*0.01 }}"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4640,
        -240
      ],
      "id": "dc9a49df-60f2-4621-8257-cd2d6f513f2a",
      "name": "Wait2",
      "webhookId": "9e441ec3-ee66-45af-92f1-dcb0b4ea9854"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Edit Fields').item.json.serverUrl }}/message/sendText/{{ $('Edit Fields').item.json.instanceName }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Edit Fields').item.json.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Edit Fields').item.json.message.chatId }}"
            },
            {
              "name": "text",
              "value": "={{ $('Verificador de Respuesta').item.json.output.response.part_3 }}"
            },
            {
              "name": "delay",
              "value": "={{ 2000 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4880,
        -240
      ],
      "id": "bb9eb330-d435-4857-914e-fbdc30c968d3",
      "name": "Enviar Parte3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5120,
        -100
      ],
      "id": "09117357-747e-46df-8620-3187ed3f3ca3",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Edit Fields').item.json.message.chatId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2720,
        100
      ],
      "id": "04fe2a49-61fc-4350-bf28-75df74c7ceca",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "HoooGLNqE6GLB7Do",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Encolamiento de Mensajes",
        "height": 920,
        "width": 1760
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1860,
        -360
      ],
      "id": "4f418f7b-522b-461d-ae80-6d3a62a8f203",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# Procesamiento del Mensaje (Texto, Audio, Imagen)",
        "height": 1240,
        "width": 2360,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -20,
        -480
      ],
      "id": "5f0279de-b015-4d28-b84d-ee6a1e652c90",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Entrada WhatsApp",
        "height": 480,
        "width": 460,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2360,
        -200
      ],
      "id": "3c7f5326-7b2a-4906-b08d-11b9f0d82aa6",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# Agente Ecommerce",
        "height": 1220,
        "width": 580,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2380,
        -460
      ],
      "id": "d6157277-268e-4c8b-8337-24cf7acb1789",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "# Formato de Respuesta por WhatsApp",
        "height": 1220,
        "width": 2440,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3000,
        -460
      ],
      "id": "77838e4e-13ae-4ecf-9ee9-93e3bc7670ac",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2580,
        160
      ],
      "id": "b80ca6f0-f963-414d-beeb-f0512fd54c25",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "qLM5Iy3mjllZuUML",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $json.content }}",
        "schemaType": "manual",
        "inputSchema": "{\n       \"search_intent\": true,\n       \"search_params\": [\n         { \"type\": \"search\", \"value\": \"ture or false\" },\n         { \"type\": \"keyword\", \"value\": \"valore_keyword\" },\n         { \"type\": \"min_price\", \"value\": \"valore_min_price\" },\n         { \"type\": \"max_price\", \"value\": \"valore_max_price\" },\n         { \"type\": \"sku\", \"value\": \"valore_sku\" },\n         { \"type\": \"category\", \"value\": \"valore_categoria\" }\n       ]\n     }",
        "options": {
          "systemPromptTemplate": "=Eres un asistente inteligente para una tienda de ropa. Tu tarea consiste en analizar el texto de entrada procedente de un chat y determinar si el usuario está buscando un producto. Si el usuario está buscando un producto, necesitas extraer la siguiente información:\n1. La palabra clave (keyword) útil para la búsqueda.\n2. Los precios mínimos o máximos en caso de que se especifiquen.\n3. Un SKU (código de producto) si se menciona.\n4. El nombre de la categoría en la que buscar, si se especifica.\n\nInstrucciones:\n1. 1. Identificar la intención: Determinar si el usuario está buscando un producto específico.\n2. 2. Extraer la información:\n- Si el usuario está buscando un producto, identifíquelo:\n- Poner el tipo \"search\" a true. En caso contrario, ponerlo a false\n- Las palabras clave.\n- Los precios mínimos o máximos (por ejemplo, \"menos de 50 euros\", \"entre 30 y 60 euros\").\n- Un SKU (por ejemplo, \"ABC123 code\").\n- El nombre de la categoría (por ejemplo, \"camisetas\", \"vaqueros\", \"mujer\", \"hombre\").\n3. Formato de salida: Devuelve un objeto JSON con la estructura dada."
        }
      },
      "id": "64dd0c9e-eead-4001-a532-0baeca50158b",
      "name": "Information Extractor",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "position": [
        2400,
        -140
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2400,
        60
      ],
      "id": "52b239a6-cd24-44d8-b43a-3a1d1fad45a8",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "qLM5Iy3mjllZuUML",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Utiliza siempre esta herramienta para cualquier consulta del usuario",
        "operation": "getAll",
        "options": {
          "maxPrice": "={{ $('Information Extractor').item.json.output.price_max }}",
          "minPrice": "={{ $('Information Extractor').item.json.output.price_min }}",
          "search": "={{ $('Information Extractor').item.json.output.keyword }}",
          "sku": "={{ $('Information Extractor').item.json.output.SKU }}",
          "stockStatus": "instock"
        }
      },
      "type": "n8n-nodes-base.wooCommerceTool",
      "typeVersion": 1,
      "position": [
        2860,
        220
      ],
      "id": "90a28395-8fa9-439c-a0ba-c20d9979910a",
      "name": "Asistente de Ventas",
      "credentials": {
        "wooCommerceApi": {
          "id": "u1JmI1Ib31zDuT9x",
          "name": "WooCommerce account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "push mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "descargar audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "descargar imagen",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "text content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "descargar audio": {
      "main": [
        [
          {
            "node": "convertir audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convertir audio": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "audio content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "descargar imagen": {
      "main": [
        [
          {
            "node": "convertir imagen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convertir imagen": {
      "main": [
        [
          {
            "node": "describe imagen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "describe imagen": {
      "main": [
        [
          {
            "node": "image content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "audio content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "image content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "text content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Verificador de Respuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mensaje": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "push mensaje": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Json Parse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Json Parse": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "obtener todos mensajes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "borrar todos mensajes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obtener todos mensajes": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "borrar todos mensajes": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Verificador de Respuesta",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "4o mini Verificador": {
      "ai_languageModel": [
        [
          {
            "node": "Verificador de Respuesta",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Verificador de Respuesta": {
      "main": [
        [
          {
            "node": "Enviar Parte1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Parte1": {
      "main": [
        [
          {
            "node": "If Parte 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Parte 2": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Parte 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Enviar Parte2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Parte2": {
      "main": [
        [
          {
            "node": "If Parte 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Parte 3": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Enviar Parte3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Parte3": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Asistente de Ventas": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  ],
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Europe/Madrid",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "7b764785-192b-42bd-bb5d-611081bedbf3",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9bf9145e22226d3dde31d69a2254018e4fb1eec7eb0d3a8fb5176a27c2816db5"
  },
  "id": "JVK3g0XxbwH9IUiW",
  "tags": []
}